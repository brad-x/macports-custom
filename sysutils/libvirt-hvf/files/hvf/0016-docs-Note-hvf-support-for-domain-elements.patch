From: Andrea Bolognani <abologna@redhat.com>
Subject: [libvirt PATCH v4 16/19] docs: Note hvf support for domain elements
Date: Fri,  7 Jan 2022 10:47:43 +0100
Content-Type: text/plain; charset="utf-8"

From: Roman Bolshakov <r.bolshakov@yadro.com>

Many domain elements have "QEMU and KVM only" or "QEMU/KVM since x.y.z"
remarks. Most of the elements work for HVF domain, so it makes sense to
add respective notices for HVF domain.

All the elements have been manually tested.

Signed-off-by: Roman Bolshakov <r.bolshakov@yadro.com>
Signed-off-by: Andrea Bolognani <abologna@redhat.com>
---
 docs/formatdomain.rst | 19 +++++++++++--------
 1 file changed, 11 insertions(+), 8 deletions(-)

diff --git docs/formatdomain.rst docs/formatdomain.rst
index 3e9de05249..e27fb23119 100644
--- docs/formatdomain.rst
+++ docs/formatdomain.rst
@@ -1426,7 +1426,8 @@ In case no restrictions need to be put on CPU model and its features, a simpler
       :since:`Since 7.1.0` with the QEMU driver.
 
    Both ``host-model`` and ``host-passthrough`` modes make sense when a domain
-   can run directly on the host CPUs (for example, domains with type ``kvm``).
+   can run directly on the host CPUs (for example, domains with type ``kvm``
+   or ``hvf``).
    The actual host CPU is irrelevant for domains with emulated virtual CPUs
    (such as domains with type ``qemu``). However, for backward compatibility
    ``host-model`` may be implemented even for domains running on emulated CPUs
@@ -1750,7 +1751,7 @@ Each of these states allow for the same four possible actions.
    The domain will be terminated and then restarted with a new name. (Only
    supported by the libxl hypervisor driver.)
 
-QEMU/KVM supports the ``on_poweroff`` and ``on_reboot`` events handling the
+QEMU/KVM/HVF supports the ``on_poweroff`` and ``on_reboot`` events handling the
 ``destroy`` and ``restart`` actions, but the combination of ``on_poweroff`` set
 to ``restart`` and ``on_reboot`` set to ``destroy`` is forbidden.
 
@@ -1885,8 +1886,8 @@ are:
    Physical address extension mode allows 32-bit guests to address more than 4
    GB of memory.
 ``acpi``
-   ACPI is useful for power management, for example, with KVM guests it is
-   required for graceful shutdown to work.
+   ACPI is useful for power management, for example, with KVM or HVF guests it
+   is required for graceful shutdown to work.
 ``apic``
    APIC allows the use of programmable IRQ management. :since:`Since 0.10.2
    (QEMU only)` there is an optional attribute ``eoi`` with values ``on`` and
@@ -6195,14 +6196,16 @@ A video device.
 
    You can provide the amount of video memory in kibibytes (blocks of 1024
    bytes) using ``vram``. This is supported only for guest type of "vz", "qemu",
-   "vbox", "vmx" and "xen". If no value is provided the default is used. If the
+   "kvm", "hvf", "vbox", "vmx" and "xen".
+   If no value is provided the default is used. If the
    size is not a power of two it will be rounded to closest one.
 
    The number of screen can be set using ``heads``. This is supported only for
-   guests type of "vz", "kvm", "vbox" and "vmx".
+   guests type of "vz", "kvm", "hvf", "vbox" and "vmx".
 
-   For guest type of "kvm" or "qemu" and model type "qxl" there are optional
-   attributes. Attribute ``ram`` ( :since:`since 1.0.2` ) specifies the size of
+   For guest type of "kvm", "hvf" or "qemu" and model type "qxl" there are
+   optional attributes.
+   Attribute ``ram`` ( :since:`since 1.0.2` ) specifies the size of
    the primary bar, while the attribute ``vram`` specifies the secondary bar
    size. If ``ram`` or ``vram`` are not supplied a default value is used. The
    ``ram`` should also be rounded to power of two as ``vram``. There is also
-- 
2.31.1

